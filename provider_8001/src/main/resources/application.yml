server:
  port: 8001

spring:
  application:
    name: provider8001
  datasource:
    url: jdbc:mysql://localhost:3306/mircroservicereview?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=false&serverTimezone=UTC
    username: root
    password: rootAdmin

mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: org.person.pojo

#Eureka服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为。
eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #单机版
      defaultZone: http://localhost:7001/eureka
      # 集群版
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    instance-id: payment8001
    #访问路径可以显示IP地址
    prefer-ip-address: true
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    #lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
    #lease-expiration-duration-in-seconds: 2

  # 配置Swagger相关信息
instance:
  prefer-ip-address: true
  instanceId: ${spring.cloud.client.ipAddress}:${server.port}
  status-page-url: http://${spring.cloud.client.ipAddress}:${server.port}/swagger-ui.html
    # ${server.port}为该服务的端口号